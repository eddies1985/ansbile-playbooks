- name: onyx_upgrade
  hosts: ONYX
  gather_facts: no
  strategy: free
  connection: network_cli
  become: yes
  become_method: enable
  vars:
    ansible_network_os: onyx
    local_path: "/mswg/release/sx_mlnx_os/"
    cpu: "X86_64"   # X86_64 | PPC_M460EX
    user: user
    password: password
    force_upgrade_downgrade: "false"
    version: 3.7.1134
    transfer_protocol: scp
    source_file: "{{local_path}}/sx_mlnx_os-{{ version }}/{{ cpu  }}/image-{{ cpu }}-{{ version }}.img"
    destination_folder: /var/opt/tms/images/
    reload: "yes"
  remote_user: admin
  tasks:
    - import_role:
       name: onyx_copy_scp
      tags: copy_to_onyx

    - name: image install
      onyx_command:
         commands: image install image-{{ cpu }}-{{ version }}.img
      tags: image_install

    - name: image boot next and reload with upgrade_downgrade_force
      onyx_config:
          lines:
            - image boot next
            - configuration write
            - no boot next fallback-reboot enable
          backup: yes
      when:
       - force_upgrade_downgrade == "true"
      ignore_errors: yes
      tags: boot_next

    - name: image boot next and reload without upgrade_downgrade_force
      onyx_config:
          lines:
            - image boot next
            - configuration write
          backup: yes
      when:
        - force_upgrade_downgrade == "false"
      ignore_errors: yes
      tags: boot_next

    - name: reload
      onyx_config:
          commands:
              - reload
      when: reload == "yes"
      ignore_errors: yes
      tags: reload

    - name: wait for switch to reboot
      delegate_to: localhost
      wait_for:
       host: "{{ inventory_hostname }}"
       port: 22
       delay: 160
       timeout: 800
      become: false
      tags: wait_for_ssh

    - name: wait_for_switch_cli
      onyx_command:
        commands: show version concise
        wait_for:
          - result[0] contains {{version}}
      tags: wait_for_switch_cli
      register: new_version

    - name: print_new_version
      debug:
        msg: "New version after upgrade: {{new_version.stdout}}"
      tags: print_new_version
