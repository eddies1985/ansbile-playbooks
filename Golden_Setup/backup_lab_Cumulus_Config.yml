---
- name: lab_cumulus_config_backup
  hosts: golden_cumulus
  gather_facts: True
  #strategy: free
  become: yes
  become_method: sudo
  vars:
    #ansible_python_interpreter: /usr/bin/python3
    send_mail: False
    send_mail_secure: never
    log_path: ./ansible.log
    debug: True
    backup_dir: /var/config/cumulus
  tasks:

  - shell: date +%d_%m_%Y_%H_%M
    register: today

  - name: net show config
    shell: 'net show config commands | grep net | grep -v dot1x | grep -v "del all" | grep -v "breakout 1x" > /home/cumulus/{{ansible_hostname}}_nclu'
      #Explanation of  grep commands
      # '| grep net' removes all non-net commands (e.g. comments)
      # '| grep -v dot1x removes dot1x commands when not configured, see internal Cumulus Networks bug CM-17143
      # '| grep -v "del all"' removes the del all command from the beginning of the output, otherwise replay won't be idempotent

  - name: net_show_conf_files
    shell: net show configuration files  | grep -B 1 '===' | egrep -v '===|--' >  /home/cumulus/{{ansible_hostname}}_nclu_conf

  - name: fetch the nclu config  and store it locally
    fetch:
      dest: "{{backup_dir}}/{{today.stdout}}/{{inventory_hostname}}/"
      src: "{{item}}"
      flat: yes
    loop:
     - /home/cumulus/{{ansible_hostname}}_nclu
     - /home/cumulus/{{ansible_hostname}}_nclu_conf
    # This task grabs the output from the previous command and stores it as a flat-file locally on the machine running ansible

  - name: fetch_single_files
    fetch:
      dest: "{{backup_dir}}/{{today.stdout }}/"
      src: "{{ item }}"
      flat: no
    loop: "{{cumulus_config_files}}"

  - name: backup ACL
    shell:  find /etc/cumulus/acl/policy.d/ -maxdepth 1 -type f
    #args:
     #chdir:  /etc/cumulus/acl/policy.d/
    register: acl_files_to_copy

  - debug:
     msg: "{{acl_files_to_copy.stdout_lines}}"
  - name: copy_directories
    fetch:
      src: "{{item}}"
      dest: "{{backup_dir}}/{{today.stdout }}//"
    with_items:
      - "{{acl_files_to_copy.stdout_lines}}"

  - debug:
     msg: "{{backup_dir}}/{{today.stdout }}/"

#  - shell: 'find {{backup_dir/{{today.stdout}} -maxdepth 10 -type f'
#    register: files_to_send
#    run_once: True
#    delegate_to: localhost

#  - copy:
#     src: "{{ playbook_dir}}/backup/{{today.stdout}}"
#     dest: /swgwork/eddies/golden_lab/backup/
#    run_once: True
#    delegate_to: localost

  - name: create_archive_for_mail
    archive:
      path:
        - "{{backup_dir}}/{{today.stdout }}/{{inventory_hostname}}/*"
      dest: "{{backup_dir}}/{{today.stdout }}/{{inventory_hostname}}.tgz"
      format: gz
    delegate_to: localhost

  - shell: find {{backup_dir}}/{{today.stdout }}/ -maxdepth 1 -type f -name "*.tgz"
    register: files_to_send
    run_once: True
    delegate_to: localhost


  - import_role:
        name: send_mail
    vars:
      mail_body: "Playbook used: {{ansible_play_name}} "
      mail_server: "10.0.8.70"
      mail_subject: "GSO Network Golden lab: Summary mail - all Cumulus devices configuration files backup {{today.stdout}}"
      attach: "{{ files_to_send.stdout_lines }}"
      mail_from: "eddies@mellanox.com"
      mail_to_list:
         - eddies@mellanox.com
         - hagaia@mellanox.com
         - marlon@mellanox.com
         - denisyu@mellanox.com
         - oria@mellanox.com
      secure: "{{send_mail_secure}}"
    when: send_mail == "True"
    tags: send_mail
    run_once: True
    delegate_to: localhost

  - debug:
      msg: "{{ files_to_send.stdout_lines }}"
